--- a/drivers/net/wireless/ath/ath11k/mhi.c
+++ b/drivers/net/wireless/ath/ath11k/mhi.c
@@ -343,8 +343,10 @@
 		return "MHI_CB_FATAL_ERROR";
 	case MHI_CB_BW_REQ:
 		return "MHI_CB_BW_REQ";
+#if LINUX_VERSION_IS_LESS(6,11,0)
 	case MHI_CB_EE_SBL_MODE:
 		return "MHI_CB_EE_SBL_MODE";
+#endif
 	default:
 		return "UNKNOWN";
 	}
@@ -367,9 +369,11 @@
 		if (!(test_bit(ATH11K_FLAG_UNREGISTERING, &ab->dev_flags)))
 			queue_work(ab->workqueue_aux, &ab->reset_work);
 		break;
+#if LINUX_VERSION_IS_LESS(6,11,0)
 	case MHI_CB_EE_SBL_MODE:
 		ath11k_mhi_qrtr_instance_set(mhi_cntrl);
 		break;
+#endif
 	default:
 		break;
 	}
--- a/drivers/net/wireless/ath/ath11k/ahb.c
+++ b/drivers/net/wireless/ath/ath11k/ahb.c
@@ -1269,7 +1269,11 @@
 	platform_set_drvdata(pdev, NULL);
 }
 
+#if LINUX_VERSION_IS_LESS(6,11,0)
 static int ath11k_ahb_remove(struct platform_device *pdev)
+#else
+static void ath11k_ahb_remove(struct platform_device *pdev)
+#endif
 {
 	struct ath11k_base *ab = platform_get_drvdata(pdev);
 
@@ -1286,7 +1290,9 @@
 qmi_fail:
 	ath11k_ahb_free_resources(ab);
 
+#if LINUX_VERSION_IS_LESS(6,11,0)
 	return 0;
+#endif
 }
 
 static void ath11k_ahb_shutdown(struct platform_device *pdev)
