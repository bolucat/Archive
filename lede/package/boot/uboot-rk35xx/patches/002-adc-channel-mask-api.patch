Index: u-boot-2017.09/drivers/adc/adc-uclass.c
===================================================================
--- u-boot-2017.09.orig/drivers/adc/adc-uclass.c
+++ u-boot-2017.09/drivers/adc/adc-uclass.c
@@ -80,6 +80,18 @@ int adc_data_mask(struct udevice *dev, u
 	return 0;
 }
 
+int adc_channel_mask(struct udevice *dev, unsigned int *channel_mask)
+{
+	struct adc_uclass_platdata *uc_pdata = dev_get_uclass_platdata(dev);
+
+	if (!uc_pdata)
+		return -ENOSYS;
+
+	*channel_mask = uc_pdata->channel_mask;
+
+	return 0;
+}
+
 int adc_stop(struct udevice *dev)
 {
 	const struct adc_ops *ops = dev_get_driver_ops(dev);
Index: u-boot-2017.09/include/adc.h
===================================================================
--- u-boot-2017.09.orig/include/adc.h
+++ u-boot-2017.09/include/adc.h
@@ -220,6 +220,18 @@ int adc_channels_data(struct udevice *de
 int adc_data_mask(struct udevice *dev, unsigned int *data_mask);
 
 /**
+ * adc_channel_mask() - get channel mask for given ADC device
+ *
+ * This can be used if adc uclass platform data is filled.
+ *
+ * @dev:       ADC device to check
+ * @channel_mask: pointer to the returned channel bitmask
+ * @return: 0 if OK, -ve on error
+ */
+int adc_channel_mask(struct udevice *dev, unsigned int *channel_mask);
+
+
+/**
  * adc_channel_single_shot() - get output data of conversion for the ADC
  * device's channel. This function searches for the device with the given name,
  * starts the given channel conversion and returns the output data.
