From c3b0940611368b76d22c9251f040bf9fd641a780 Mon Sep 17 00:00:00 2001
From: Wesley Yao <wesley.yao@rock-chips.com>
Date: Mon, 7 Nov 2022 15:57:20 +0800
Subject: [PATCH] PM / devfreq: rockchip-dfi: Add support for rk3528 dfi

Signed-off-by: Wesley Yao <wesley.yao@rock-chips.com>
Change-Id: Iaf29eebe4ccf3e9a25f5a76cd727af2410d514b3
---
 drivers/devfreq/event/rockchip-dfi.c | 42 ++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)

--- a/drivers/devfreq/event/rockchip-dfi.c
+++ b/drivers/devfreq/event/rockchip-dfi.c
@@ -52,6 +52,10 @@
 #define RK3368_DFI_EN			(0x30003 << 5)
 #define RK3368_DFI_DIS			(0x30000 << 5)
 
+#define RK3528_PMUGRF_OFFSET		0x70000
+#define RK3528_PMUGRF_OS_REG18		0x248
+#define RK3528_PMUGRF_OS_REG19		0x24c
+
 #define MAX_DMC_NUM_CH			4
 #define READ_DRAMTYPE_INFO(n)		(((n) >> 13) & 0x7)
 #define READ_CH_INFO(n)			(((n) >> 28) & 0x3)
@@ -723,6 +727,41 @@ static __maybe_unused __init int rk3328_
 	return 0;
 }
 
+static __maybe_unused __init int rk3528_dfi_init(struct platform_device *pdev,
+						 struct rockchip_dfi *data,
+						 struct devfreq_event_desc *desc)
+{
+	struct device_node *np = pdev->dev.of_node, *node;
+	struct resource *res;
+	u32 val_18, val_19;
+
+	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	data->regs = devm_ioremap_resource(&pdev->dev, res);
+	if (IS_ERR(data->regs))
+		return PTR_ERR(data->regs);
+
+	node = of_parse_phandle(np, "rockchip,grf", 0);
+	if (node) {
+		data->regmap_grf = syscon_node_to_regmap(node);
+		if (IS_ERR(data->regmap_grf))
+			return PTR_ERR(data->regmap_grf);
+	}
+
+	regmap_read(data->regmap_grf, RK3528_PMUGRF_OFFSET + RK3528_PMUGRF_OS_REG18, &val_18);
+	regmap_read(data->regmap_grf, RK3528_PMUGRF_OFFSET + RK3528_PMUGRF_OS_REG19, &val_19);
+	if (READ_SYSREG_VERSION(val_19) >= 0x3)
+		data->dram_type = READ_DRAMTYPE_INFO_V3(val_18, val_19);
+	else
+		data->dram_type = READ_DRAMTYPE_INFO(val_18);
+	data->count_rate = 2;
+	data->ch_msk = 1;
+	data->clk = NULL;
+
+	desc->ops = &rockchip_dfi_ops;
+
+	return 0;
+}
+
 static const struct of_device_id rockchip_dfi_id_match[] = {
 #ifdef CONFIG_CPU_PX30
 	{ .compatible = "rockchip,px30-dfi", .data = px30_dfi_init },
@@ -745,6 +784,9 @@ static const struct of_device_id rockchi
 #ifdef CONFIG_CPU_RK3399
 	{ .compatible = "rockchip,rk3399-dfi", .data = rockchip_dfi_init },
 #endif
+#ifdef CONFIG_CPU_RK3528
+	{ .compatible = "rockchip,rk3528-dfi", .data = rk3528_dfi_init },
+#endif
 #ifdef CONFIG_CPU_RK3562
 	{ .compatible = "rockchip,rk3562-dfi", .data = px30_dfi_init },
 #endif
