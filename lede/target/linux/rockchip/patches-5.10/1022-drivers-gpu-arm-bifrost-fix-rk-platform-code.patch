From 0024c25826fea3a25eabb1c198a94b9dc8454ca0 Mon Sep 17 00:00:00 2001
From: Liangbin Lian <jjm2473@gmail.com>
Date: Mon, 4 Dec 2023 14:27:54 +0800
Subject: [PATCH] drivers/gpu/arm/bifrost: fix rk platform code build without
 wakelocks support

---
 .../gpu/arm/bifrost/platform/rk/mali_kbase_config_rk.c | 10 ++++++++++
 drivers/gpu/arm/bifrost/platform/rk/mali_kbase_rk.h    |  4 ++++
 2 files changed, 14 insertions(+)

diff --git a/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_config_rk.c b/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_config_rk.c
index c32526a86..8afb1593a 100755
--- a/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_config_rk.c
+++ b/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_config_rk.c
@@ -118,7 +118,9 @@ static void rk_pm_power_off_delay_work(struct work_struct *work)
 	}
 
 	platform->is_powered = false;
+#ifdef CONFIG_PM_WAKELOCKS
 	wake_unlock(&platform->wake_lock);
+#endif
 
 	mutex_unlock(&platform->lock);
 }
@@ -150,7 +152,9 @@ static int kbase_platform_rk_init(struct kbase_device *kbdev)
 	}
 	INIT_DEFERRABLE_WORK(&platform->work, rk_pm_power_off_delay_work);
 
+#ifdef CONFIG_PM_WAKELOCKS
 	wake_lock_init(&platform->wake_lock, WAKE_LOCK_SUSPEND, "gpu");
+#endif
 
 	platform->utilisation_period = DEFAULT_UTILISATION_PERIOD_IN_MS;
 
@@ -168,7 +172,9 @@ static int kbase_platform_rk_init(struct kbase_device *kbdev)
 	return 0;
 
 err_sysfs_files:
+#ifdef CONFIG_PM_WAKELOCKS
 	wake_lock_destroy(&platform->wake_lock);
+#endif
 	destroy_workqueue(platform->power_off_wq);
 err_wq:
 	return ret;
@@ -184,7 +190,9 @@ static void kbase_platform_rk_term(struct kbase_device *kbdev)
 
 	if (platform) {
 		cancel_delayed_work_sync(&platform->work);
+#ifdef CONFIG_PM_WAKELOCKS
 		wake_lock_destroy(&platform->wake_lock);
+#endif
 		destroy_workqueue(platform->power_off_wq);
 		platform->is_powered = false;
 		platform->kbdev = NULL;
@@ -291,7 +299,9 @@ static int rk_pm_callback_power_on(struct kbase_device *kbdev)
 	rockchip_monitor_volt_adjust_unlock(kbdev->mdev_info);
 
 	platform->is_powered = true;
+#ifdef CONFIG_PM_WAKELOCKS
 	wake_lock(&platform->wake_lock);
+#endif
 
 out:
 	mutex_unlock(&platform->lock);
diff --git a/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_rk.h b/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_rk.h
index 0a42559df..4888f94cc 100755
--- a/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_rk.h
+++ b/drivers/gpu/arm/bifrost/platform/rk/mali_kbase_rk.h
@@ -15,7 +15,9 @@
 #ifndef _MALI_KBASE_RK_H_
 #define _MALI_KBASE_RK_H_
 
+#ifdef CONFIG_PM_WAKELOCKS
 #include <linux/wakelock.h>
+#endif
 
 /*---------------------------------------------------------------------------*/
 
@@ -42,11 +44,13 @@ struct rk_context {
 	struct delayed_work work;
 	unsigned int delay_ms;
 
+#ifdef CONFIG_PM_WAKELOCKS
 	/*
 	 * WAKE_LOCK_SUSPEND for ensuring to run
 	 * delayed_work_to_power_off_gpu before suspend.
 	 */
 	struct wake_lock wake_lock;
+#endif
 
 	/* debug only, the period in ms to count gpu_utilisation. */
 	unsigned int utilisation_period;
-- 
2.31.0

