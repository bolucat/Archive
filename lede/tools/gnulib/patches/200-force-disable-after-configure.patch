--- a/lib/fcntl.c
+++ b/lib/fcntl.c
@@ -198,6 +198,8 @@ static int klibc_fcntl (int fd, int acti
    FD_CLOEXEC is portable, but other flags may be present); otherwise
    return -1 and set errno.  */
 
+#if (GNULIB_defined_fcntl || GNULIB_defined_rpl_fcntl)
+
 int
 fcntl (int fd, int action, /* arg */...)
 #undef fcntl
@@ -443,6 +445,8 @@ fcntl (int fd, int action, /* arg */...)
   return result;
 }
 
+#endif /* (GNULIB_defined_fcntl || GNULIB_defined_rpl_fcntl) */
+
 static int
 rpl_fcntl_DUPFD (int fd, int target)
 {
--- a/lib/stdlib.in.h
+++ b/lib/stdlib.in.h
@@ -1447,10 +1447,16 @@ _GL_FUNCDECL_RPL (reallocarray, void *,
                   (void *ptr, size_t nmemb, size_t size));
 _GL_CXXALIAS_RPL (reallocarray, void *,
                   (void *ptr, size_t nmemb, size_t size));
+#  if !GNULIB_defined_rpl_reallocarray
+#   define GNULIB_defined_rpl_reallocarray 1
+#  endif
 # else
 #  if ! @HAVE_REALLOCARRAY@
 _GL_FUNCDECL_SYS (reallocarray, void *,
                   (void *ptr, size_t nmemb, size_t size));
+#   if !GNULIB_defined_reallocarray
+#    define GNULIB_defined_reallocarray 1
+#   endif
 #  endif
 _GL_CXXALIAS_SYS (reallocarray, void *,
                   (void *ptr, size_t nmemb, size_t size));
--- a/lib/reallocarray.c
+++ b/lib/reallocarray.c
@@ -23,6 +23,8 @@
 #include <stdlib.h>
 #include <errno.h>
 
+#if (GNULIB_defined_reallocarray || GNULIB_defined_rpl_reallocarray)
+
 void *
 reallocarray (void *ptr, size_t nmemb, size_t size)
 {
@@ -36,3 +38,5 @@ reallocarray (void *ptr, size_t nmemb, s
   /* Rely on the semantics of GNU realloc.  */
   return realloc (ptr, nbytes);
 }
+
+#endif /* (GNULIB_defined_reallocarray || GNULIB_defined_rpl_reallocarray) */
